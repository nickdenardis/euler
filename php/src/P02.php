<?php

namespace Euler;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
class P02
{
    public static function subEvenFibonacci(int $upper_bound)
    {
        // Get all the Fibonacci numbers
        $numbers = static::getFibonacciNumbers($upper_bound);

        // Sum only the even
        return static::sumEvenNumbers($numbers);
    }

    private static function getFibonacciNumbers(int $upper_bound)
    {
        $nums = [];

        if ($upper_bound > 1) {
            $nums[] = 1;
        }

        if ($upper_bound > 2) {
            $nums[] = 2;
        }

        if ($upper_bound > 3) {
            for ($i = 2; end($nums) < $upper_bound; $i++) {
                $new_num = $nums[($i - 2)] + $nums[($i - 1)];


                if ($new_num > $upper_bound) {
                    break;
                }

                $nums[$i] = $new_num;
            }
        }

        return $nums;
    }

    private static function sumEvenNumbers(array $numbers)
    {
        $total = 0;

        foreach ($numbers as $value) {
            if ($value % 2 === 0) {
                $total += $value;
            }
        }

        return $total;
    }
}
